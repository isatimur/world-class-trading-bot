[project]
name = "trading-bot"
version = "1.0.0"
description = "Advanced Trading Agent with Google ADK Python and Bybit V5 API integration"
authors = [
    {name = "Trading Bot Team", email = "team@tradingbot.com"}
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
keywords = ["trading", "bot", "telegram", "ai", "finance"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
]

dependencies = [
    "python-telegram-bot>=20.7",
    "pybit>=5.7.0",
    "aiohttp>=3.9.1",
    "yfinance>=0.2.28",
    "pandas>=2.1.4",
    "numpy>=1.26.0",
    "ta>=0.10.2",
    "requests>=2.31.0",
    "structlog>=23.2.0",
    "psutil>=5.9.6",
    "python-dotenv>=1.0.0",
    "pydantic-settings>=2.10.1",
    "pydantic>=2.10.6",
    "psycopg2-binary>=2.9.9",
    "matplotlib>=3.10.3",
    "seaborn>=0.13.2",
    "plotly>=6.2.0",
    "google-generativeai>=0.8.5",
    "scikit-learn>=1.7.1",
    "google-genai>=1.26.0",
    "google-auth-oauthlib>=1.2.2",
    "google-cloud-aiplatform>=1.104.0",
    "google-cloud-core>=2.4.3",
    "google-cloud-logging>=3.12.1",
    "google-cloud-storage>=2.19.0",
    "google-cloud-secret-manager>=2.24.0",
    "google-cloud-bigquery>=3.35.0",
    "google-cloud-resource-manager>=1.14.2",
    "google-cloud-audit-log>=0.3.2",
    "google-cloud-appengine-logging>=1.6.2",
    "google-cloud-speech>=2.33.0",
    "google-cloud-trace>=1.16.2",
    "google-crc32c>=1.7.1",
    "google-resumable-media>=2.7.2",
    "grpc-google-iam-v1>=0.14.2",
    "tensorflow>=2.19.0",
    "keras>=3.10.0",
    "tensorboard>=2.19.0",
    "tensorboard-data-server>=0.7.2",
    "h5py>=3.14.0",
    "ml-dtypes>=0.5.1",
    "opt-einsum>=3.4.0",
    "optree>=0.16.0",
    "namex>=0.1.0",
    "gast>=0.6.0",
    "google-pasta>=0.2.0",
    "termcolor>=3.1.0",
    "wrapt>=1.17.2",
    "xgboost>=3.0.2",
    "lightgbm>=4.6.0",
    "fastapi>=0.116.1",
    "uvicorn>=0.35.0",
    "starlette>=0.47.1",
    "python-multipart>=0.0.20",
    "httpx-sse>=0.4.1",
    "sse-starlette>=2.4.1",
    "opentelemetry-sdk>=1.35.0",
    "opentelemetry-exporter-gcp-trace>=1.9.0",
    "opentelemetry-resourcedetector-gcp>=1.9.0a0",
    "opentelemetry-semantic-conventions>=0.56b0",
    "cryptography>=45.0.5",
    "authlib>=1.6.0",
    "jsonschema>=4.25.0",
    "jsonschema-specifications>=2025.4.1",
    "referencing>=0.36.2",
    "rpds-py>=0.26.0",
    "graphviz>=0.21",
    "shapely>=2.1.1",
    "sqlalchemy>=2.0.41",
    "tzlocal>=5.3.1",
    "watchdog>=6.0.0",
    "cloudpickle>=3.1.1",
    "pyyaml>=6.0.2",
]

[project.optional-dependencies]
ai = [
    "google-adk>=1.7.0",
    "google-generativeai>=0.3.2",
    "google-auth>=2.23.4",
    "google-auth-oauthlib>=1.1.0",
    "google-auth-httplib2>=0.1.1",
]

dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pre-commit>=3.5.0",
]

[project.scripts]
trading-bot = "trading_bot.__main__:main"
trading-bot-telegram = "telegram_bot_main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/trading_bot"]
include = [
    "src/trading_bot/**/*.py",
    "README.md",
    "env.example",
    "run_bot.py",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--asyncio-mode=auto",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
]
